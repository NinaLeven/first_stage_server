// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event.proto

package event

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SortOrder int32

const (
	SortOrder_NO_ORDER SortOrder = 0
	SortOrder_ASC      SortOrder = 1
	SortOrder_DESC     SortOrder = 2
)

var SortOrder_name = map[int32]string{
	0: "NO_ORDER",
	1: "ASC",
	2: "DESC",
}

var SortOrder_value = map[string]int32{
	"NO_ORDER": 0,
	"ASC":      1,
	"DESC":     2,
}

func (x SortOrder) String() string {
	return proto.EnumName(SortOrder_name, int32(x))
}

func (SortOrder) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{0}
}

type EventType int32

const (
	EventType_OPENED EventType = 0
	EventType_GROUP  EventType = 1
	EventType_CLOSED EventType = 2
)

var EventType_name = map[int32]string{
	0: "OPENED",
	1: "GROUP",
	2: "CLOSED",
}

var EventType_value = map[string]int32{
	"OPENED": 0,
	"GROUP":  1,
	"CLOSED": 2,
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}

func (EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{1}
}

type Role int32

const (
	Role_student      Role = 0
	Role_group_member Role = 1
	Role_group_admin  Role = 2
	Role_admin        Role = 3
)

var Role_name = map[int32]string{
	0: "student",
	1: "group_member",
	2: "group_admin",
	3: "admin",
}

var Role_value = map[string]int32{
	"student":      0,
	"group_member": 1,
	"group_admin":  2,
	"admin":        3,
}

func (x Role) String() string {
	return proto.EnumName(Role_name, int32(x))
}

func (Role) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{2}
}

type Id struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Id) Reset()         { *m = Id{} }
func (m *Id) String() string { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()    {}
func (*Id) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{0}
}

func (m *Id) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Id.Unmarshal(m, b)
}
func (m *Id) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Id.Marshal(b, m, deterministic)
}
func (m *Id) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Id.Merge(m, src)
}
func (m *Id) XXX_Size() int {
	return xxx_messageInfo_Id.Size(m)
}
func (m *Id) XXX_DiscardUnknown() {
	xxx_messageInfo_Id.DiscardUnknown(m)
}

var xxx_messageInfo_Id proto.InternalMessageInfo

func (m *Id) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Pagination struct {
	Limit                uint64    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               uint64    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy               string    `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	Order                SortOrder `protobuf:"varint,4,opt,name=order,proto3,enum=event.SortOrder" json:"order,omitempty"`
	TotalHits            uint64    `protobuf:"varint,5,opt,name=total_hits,json=totalHits,proto3" json:"total_hits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Pagination) Reset()         { *m = Pagination{} }
func (m *Pagination) String() string { return proto.CompactTextString(m) }
func (*Pagination) ProtoMessage()    {}
func (*Pagination) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{1}
}

func (m *Pagination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pagination.Unmarshal(m, b)
}
func (m *Pagination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pagination.Marshal(b, m, deterministic)
}
func (m *Pagination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pagination.Merge(m, src)
}
func (m *Pagination) XXX_Size() int {
	return xxx_messageInfo_Pagination.Size(m)
}
func (m *Pagination) XXX_DiscardUnknown() {
	xxx_messageInfo_Pagination.DiscardUnknown(m)
}

var xxx_messageInfo_Pagination proto.InternalMessageInfo

func (m *Pagination) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Pagination) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Pagination) GetSortBy() string {
	if m != nil {
		return m.SortBy
	}
	return ""
}

func (m *Pagination) GetOrder() SortOrder {
	if m != nil {
		return m.Order
	}
	return SortOrder_NO_ORDER
}

func (m *Pagination) GetTotalHits() uint64 {
	if m != nil {
		return m.TotalHits
	}
	return 0
}

type EventCreate struct {
	Name                 string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          *wrappers.StringValue `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Start                *timestamp.Timestamp  `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End                  *timestamp.Timestamp  `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	IsSelfAssignable     *wrappers.BoolValue   `protobuf:"bytes,5,opt,name=is_self_assignable,json=isSelfAssignable,proto3" json:"is_self_assignable,omitempty"`
	Type                 EventType             `protobuf:"varint,6,opt,name=type,proto3,enum=event.EventType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *EventCreate) Reset()         { *m = EventCreate{} }
func (m *EventCreate) String() string { return proto.CompactTextString(m) }
func (*EventCreate) ProtoMessage()    {}
func (*EventCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{2}
}

func (m *EventCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventCreate.Unmarshal(m, b)
}
func (m *EventCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventCreate.Marshal(b, m, deterministic)
}
func (m *EventCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventCreate.Merge(m, src)
}
func (m *EventCreate) XXX_Size() int {
	return xxx_messageInfo_EventCreate.Size(m)
}
func (m *EventCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_EventCreate.DiscardUnknown(m)
}

var xxx_messageInfo_EventCreate proto.InternalMessageInfo

func (m *EventCreate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EventCreate) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *EventCreate) GetStart() *timestamp.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *EventCreate) GetEnd() *timestamp.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *EventCreate) GetIsSelfAssignable() *wrappers.BoolValue {
	if m != nil {
		return m.IsSelfAssignable
	}
	return nil
}

func (m *EventCreate) GetType() EventType {
	if m != nil {
		return m.Type
	}
	return EventType_OPENED
}

type EventUpdate struct {
	Id                   string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          *wrappers.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Start                *timestamp.Timestamp  `protobuf:"bytes,4,opt,name=start,proto3" json:"start,omitempty"`
	End                  *timestamp.Timestamp  `protobuf:"bytes,5,opt,name=end,proto3" json:"end,omitempty"`
	IsSelfAssignable     *wrappers.BoolValue   `protobuf:"bytes,6,opt,name=is_self_assignable,json=isSelfAssignable,proto3" json:"is_self_assignable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *EventUpdate) Reset()         { *m = EventUpdate{} }
func (m *EventUpdate) String() string { return proto.CompactTextString(m) }
func (*EventUpdate) ProtoMessage()    {}
func (*EventUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{3}
}

func (m *EventUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventUpdate.Unmarshal(m, b)
}
func (m *EventUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventUpdate.Marshal(b, m, deterministic)
}
func (m *EventUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventUpdate.Merge(m, src)
}
func (m *EventUpdate) XXX_Size() int {
	return xxx_messageInfo_EventUpdate.Size(m)
}
func (m *EventUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_EventUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_EventUpdate proto.InternalMessageInfo

func (m *EventUpdate) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EventUpdate) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *EventUpdate) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *EventUpdate) GetStart() *timestamp.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *EventUpdate) GetEnd() *timestamp.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *EventUpdate) GetIsSelfAssignable() *wrappers.BoolValue {
	if m != nil {
		return m.IsSelfAssignable
	}
	return nil
}

type EventUpdateRequest struct {
	FieldMask            *field_mask.FieldMask `protobuf:"bytes,1,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	Event                *EventUpdate          `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *EventUpdateRequest) Reset()         { *m = EventUpdateRequest{} }
func (m *EventUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*EventUpdateRequest) ProtoMessage()    {}
func (*EventUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{4}
}

func (m *EventUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventUpdateRequest.Unmarshal(m, b)
}
func (m *EventUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventUpdateRequest.Marshal(b, m, deterministic)
}
func (m *EventUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventUpdateRequest.Merge(m, src)
}
func (m *EventUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_EventUpdateRequest.Size(m)
}
func (m *EventUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventUpdateRequest proto.InternalMessageInfo

func (m *EventUpdateRequest) GetFieldMask() *field_mask.FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

func (m *EventUpdateRequest) GetEvent() *EventUpdate {
	if m != nil {
		return m.Event
	}
	return nil
}

type EventPersonsRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PersonIds            []string `protobuf:"bytes,2,rep,name=person_ids,json=personIds,proto3" json:"person_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventPersonsRequest) Reset()         { *m = EventPersonsRequest{} }
func (m *EventPersonsRequest) String() string { return proto.CompactTextString(m) }
func (*EventPersonsRequest) ProtoMessage()    {}
func (*EventPersonsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{5}
}

func (m *EventPersonsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventPersonsRequest.Unmarshal(m, b)
}
func (m *EventPersonsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventPersonsRequest.Marshal(b, m, deterministic)
}
func (m *EventPersonsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventPersonsRequest.Merge(m, src)
}
func (m *EventPersonsRequest) XXX_Size() int {
	return xxx_messageInfo_EventPersonsRequest.Size(m)
}
func (m *EventPersonsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventPersonsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventPersonsRequest proto.InternalMessageInfo

func (m *EventPersonsRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EventPersonsRequest) GetPersonIds() []string {
	if m != nil {
		return m.PersonIds
	}
	return nil
}

type Event struct {
	Id                   string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          *wrappers.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Start                *timestamp.Timestamp  `protobuf:"bytes,4,opt,name=start,proto3" json:"start,omitempty"`
	End                  *timestamp.Timestamp  `protobuf:"bytes,5,opt,name=end,proto3" json:"end,omitempty"`
	IsSelfAssignable     *wrappers.BoolValue   `protobuf:"bytes,6,opt,name=is_self_assignable,json=isSelfAssignable,proto3" json:"is_self_assignable,omitempty"`
	Members              []*PersonListEntry    `protobuf:"bytes,7,rep,name=members,proto3" json:"members,omitempty"`
	Creator              *PersonListEntry      `protobuf:"bytes,8,opt,name=creator,proto3" json:"creator,omitempty"`
	Groups               []*GroupListEntry     `protobuf:"bytes,9,rep,name=groups,proto3" json:"groups,omitempty"`
	Type                 EventType             `protobuf:"varint,10,opt,name=type,proto3,enum=event.EventType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{6}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Event) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Event) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Event) GetStart() *timestamp.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *Event) GetEnd() *timestamp.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *Event) GetIsSelfAssignable() *wrappers.BoolValue {
	if m != nil {
		return m.IsSelfAssignable
	}
	return nil
}

func (m *Event) GetMembers() []*PersonListEntry {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *Event) GetCreator() *PersonListEntry {
	if m != nil {
		return m.Creator
	}
	return nil
}

func (m *Event) GetGroups() []*GroupListEntry {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *Event) GetType() EventType {
	if m != nil {
		return m.Type
	}
	return EventType_OPENED
}

type EventListRequest struct {
	Pagination           *Pagination           `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Name                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Start                *timestamp.Timestamp  `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End                  *timestamp.Timestamp  `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	IsSelfAssignable     *wrappers.BoolValue   `protobuf:"bytes,5,opt,name=is_self_assignable,json=isSelfAssignable,proto3" json:"is_self_assignable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *EventListRequest) Reset()         { *m = EventListRequest{} }
func (m *EventListRequest) String() string { return proto.CompactTextString(m) }
func (*EventListRequest) ProtoMessage()    {}
func (*EventListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{7}
}

func (m *EventListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventListRequest.Unmarshal(m, b)
}
func (m *EventListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventListRequest.Marshal(b, m, deterministic)
}
func (m *EventListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventListRequest.Merge(m, src)
}
func (m *EventListRequest) XXX_Size() int {
	return xxx_messageInfo_EventListRequest.Size(m)
}
func (m *EventListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventListRequest proto.InternalMessageInfo

func (m *EventListRequest) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *EventListRequest) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *EventListRequest) GetStart() *timestamp.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *EventListRequest) GetEnd() *timestamp.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *EventListRequest) GetIsSelfAssignable() *wrappers.BoolValue {
	if m != nil {
		return m.IsSelfAssignable
	}
	return nil
}

type EventList struct {
	Pagination           *Pagination `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Events               []*Event    `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *EventList) Reset()         { *m = EventList{} }
func (m *EventList) String() string { return proto.CompactTextString(m) }
func (*EventList) ProtoMessage()    {}
func (*EventList) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{8}
}

func (m *EventList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventList.Unmarshal(m, b)
}
func (m *EventList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventList.Marshal(b, m, deterministic)
}
func (m *EventList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventList.Merge(m, src)
}
func (m *EventList) XXX_Size() int {
	return xxx_messageInfo_EventList.Size(m)
}
func (m *EventList) XXX_DiscardUnknown() {
	xxx_messageInfo_EventList.DiscardUnknown(m)
}

var xxx_messageInfo_EventList proto.InternalMessageInfo

func (m *EventList) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *EventList) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type Person struct {
	Id                   string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FullName             *wrappers.StringValue `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Login                *wrappers.StringValue `protobuf:"bytes,3,opt,name=login,proto3" json:"login,omitempty"`
	StudentGroups        []*GroupListEntry     `protobuf:"bytes,4,rep,name=student_groups,json=studentGroups,proto3" json:"student_groups,omitempty"`
	AdminGroups          []*GroupListEntry     `protobuf:"bytes,5,rep,name=admin_groups,json=adminGroups,proto3" json:"admin_groups,omitempty"`
	Role                 Role                  `protobuf:"varint,6,opt,name=role,proto3,enum=event.Role" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Person) Reset()         { *m = Person{} }
func (m *Person) String() string { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()    {}
func (*Person) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{9}
}

func (m *Person) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person.Unmarshal(m, b)
}
func (m *Person) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person.Marshal(b, m, deterministic)
}
func (m *Person) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person.Merge(m, src)
}
func (m *Person) XXX_Size() int {
	return xxx_messageInfo_Person.Size(m)
}
func (m *Person) XXX_DiscardUnknown() {
	xxx_messageInfo_Person.DiscardUnknown(m)
}

var xxx_messageInfo_Person proto.InternalMessageInfo

func (m *Person) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Person) GetFullName() *wrappers.StringValue {
	if m != nil {
		return m.FullName
	}
	return nil
}

func (m *Person) GetLogin() *wrappers.StringValue {
	if m != nil {
		return m.Login
	}
	return nil
}

func (m *Person) GetStudentGroups() []*GroupListEntry {
	if m != nil {
		return m.StudentGroups
	}
	return nil
}

func (m *Person) GetAdminGroups() []*GroupListEntry {
	if m != nil {
		return m.AdminGroups
	}
	return nil
}

func (m *Person) GetRole() Role {
	if m != nil {
		return m.Role
	}
	return Role_student
}

type PersonListEntry struct {
	Id                   string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FullName             *wrappers.StringValue `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Login                *wrappers.StringValue `protobuf:"bytes,3,opt,name=login,proto3" json:"login,omitempty"`
	Role                 Role                  `protobuf:"varint,4,opt,name=role,proto3,enum=event.Role" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PersonListEntry) Reset()         { *m = PersonListEntry{} }
func (m *PersonListEntry) String() string { return proto.CompactTextString(m) }
func (*PersonListEntry) ProtoMessage()    {}
func (*PersonListEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{10}
}

func (m *PersonListEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonListEntry.Unmarshal(m, b)
}
func (m *PersonListEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonListEntry.Marshal(b, m, deterministic)
}
func (m *PersonListEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonListEntry.Merge(m, src)
}
func (m *PersonListEntry) XXX_Size() int {
	return xxx_messageInfo_PersonListEntry.Size(m)
}
func (m *PersonListEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonListEntry.DiscardUnknown(m)
}

var xxx_messageInfo_PersonListEntry proto.InternalMessageInfo

func (m *PersonListEntry) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PersonListEntry) GetFullName() *wrappers.StringValue {
	if m != nil {
		return m.FullName
	}
	return nil
}

func (m *PersonListEntry) GetLogin() *wrappers.StringValue {
	if m != nil {
		return m.Login
	}
	return nil
}

func (m *PersonListEntry) GetRole() Role {
	if m != nil {
		return m.Role
	}
	return Role_student
}

type PersonList struct {
	Pagination           *Pagination        `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Persons              []*PersonListEntry `protobuf:"bytes,2,rep,name=persons,proto3" json:"persons,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PersonList) Reset()         { *m = PersonList{} }
func (m *PersonList) String() string { return proto.CompactTextString(m) }
func (*PersonList) ProtoMessage()    {}
func (*PersonList) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{11}
}

func (m *PersonList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonList.Unmarshal(m, b)
}
func (m *PersonList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonList.Marshal(b, m, deterministic)
}
func (m *PersonList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonList.Merge(m, src)
}
func (m *PersonList) XXX_Size() int {
	return xxx_messageInfo_PersonList.Size(m)
}
func (m *PersonList) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonList.DiscardUnknown(m)
}

var xxx_messageInfo_PersonList proto.InternalMessageInfo

func (m *PersonList) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *PersonList) GetPersons() []*PersonListEntry {
	if m != nil {
		return m.Persons
	}
	return nil
}

type GroupCreate struct {
	Name                 *wrappers.StringValue `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          *wrappers.StringValue `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	MemberIds            []string              `protobuf:"bytes,3,rep,name=member_ids,json=memberIds,proto3" json:"member_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GroupCreate) Reset()         { *m = GroupCreate{} }
func (m *GroupCreate) String() string { return proto.CompactTextString(m) }
func (*GroupCreate) ProtoMessage()    {}
func (*GroupCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{12}
}

func (m *GroupCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupCreate.Unmarshal(m, b)
}
func (m *GroupCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupCreate.Marshal(b, m, deterministic)
}
func (m *GroupCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupCreate.Merge(m, src)
}
func (m *GroupCreate) XXX_Size() int {
	return xxx_messageInfo_GroupCreate.Size(m)
}
func (m *GroupCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupCreate.DiscardUnknown(m)
}

var xxx_messageInfo_GroupCreate proto.InternalMessageInfo

func (m *GroupCreate) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *GroupCreate) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *GroupCreate) GetMemberIds() []string {
	if m != nil {
		return m.MemberIds
	}
	return nil
}

type GroupUpdate struct {
	Id                   string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          *wrappers.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	MemberIds            []string              `protobuf:"bytes,4,rep,name=member_ids,json=memberIds,proto3" json:"member_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GroupUpdate) Reset()         { *m = GroupUpdate{} }
func (m *GroupUpdate) String() string { return proto.CompactTextString(m) }
func (*GroupUpdate) ProtoMessage()    {}
func (*GroupUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{13}
}

func (m *GroupUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupUpdate.Unmarshal(m, b)
}
func (m *GroupUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupUpdate.Marshal(b, m, deterministic)
}
func (m *GroupUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupUpdate.Merge(m, src)
}
func (m *GroupUpdate) XXX_Size() int {
	return xxx_messageInfo_GroupUpdate.Size(m)
}
func (m *GroupUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_GroupUpdate proto.InternalMessageInfo

func (m *GroupUpdate) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GroupUpdate) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *GroupUpdate) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *GroupUpdate) GetMemberIds() []string {
	if m != nil {
		return m.MemberIds
	}
	return nil
}

type GroupUpdateRequest struct {
	FieldMask            *field_mask.FieldMask `protobuf:"bytes,1,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	Group                *GroupUpdate          `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GroupUpdateRequest) Reset()         { *m = GroupUpdateRequest{} }
func (m *GroupUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*GroupUpdateRequest) ProtoMessage()    {}
func (*GroupUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{14}
}

func (m *GroupUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupUpdateRequest.Unmarshal(m, b)
}
func (m *GroupUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupUpdateRequest.Marshal(b, m, deterministic)
}
func (m *GroupUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupUpdateRequest.Merge(m, src)
}
func (m *GroupUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_GroupUpdateRequest.Size(m)
}
func (m *GroupUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupUpdateRequest proto.InternalMessageInfo

func (m *GroupUpdateRequest) GetFieldMask() *field_mask.FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

func (m *GroupUpdateRequest) GetGroup() *GroupUpdate {
	if m != nil {
		return m.Group
	}
	return nil
}

type Group struct {
	Id                   string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          *wrappers.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Members              []*PersonListEntry    `protobuf:"bytes,4,rep,name=members,proto3" json:"members,omitempty"`
	Admins               []*PersonListEntry    `protobuf:"bytes,5,rep,name=admins,proto3" json:"admins,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{15}
}

func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (m *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(m, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Group) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Group) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Group) GetMembers() []*PersonListEntry {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *Group) GetAdmins() []*PersonListEntry {
	if m != nil {
		return m.Admins
	}
	return nil
}

type GroupListRequest struct {
	Pagination           *Pagination           `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Name                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GroupListRequest) Reset()         { *m = GroupListRequest{} }
func (m *GroupListRequest) String() string { return proto.CompactTextString(m) }
func (*GroupListRequest) ProtoMessage()    {}
func (*GroupListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{16}
}

func (m *GroupListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupListRequest.Unmarshal(m, b)
}
func (m *GroupListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupListRequest.Marshal(b, m, deterministic)
}
func (m *GroupListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupListRequest.Merge(m, src)
}
func (m *GroupListRequest) XXX_Size() int {
	return xxx_messageInfo_GroupListRequest.Size(m)
}
func (m *GroupListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupListRequest proto.InternalMessageInfo

func (m *GroupListRequest) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *GroupListRequest) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

type GroupList struct {
	Pagination           *Pagination       `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Groups               []*GroupListEntry `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GroupList) Reset()         { *m = GroupList{} }
func (m *GroupList) String() string { return proto.CompactTextString(m) }
func (*GroupList) ProtoMessage()    {}
func (*GroupList) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{17}
}

func (m *GroupList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupList.Unmarshal(m, b)
}
func (m *GroupList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupList.Marshal(b, m, deterministic)
}
func (m *GroupList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupList.Merge(m, src)
}
func (m *GroupList) XXX_Size() int {
	return xxx_messageInfo_GroupList.Size(m)
}
func (m *GroupList) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupList.DiscardUnknown(m)
}

var xxx_messageInfo_GroupList proto.InternalMessageInfo

func (m *GroupList) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *GroupList) GetGroups() []*GroupListEntry {
	if m != nil {
		return m.Groups
	}
	return nil
}

type GroupListEntry struct {
	Id                   string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          *wrappers.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GroupListEntry) Reset()         { *m = GroupListEntry{} }
func (m *GroupListEntry) String() string { return proto.CompactTextString(m) }
func (*GroupListEntry) ProtoMessage()    {}
func (*GroupListEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{18}
}

func (m *GroupListEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupListEntry.Unmarshal(m, b)
}
func (m *GroupListEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupListEntry.Marshal(b, m, deterministic)
}
func (m *GroupListEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupListEntry.Merge(m, src)
}
func (m *GroupListEntry) XXX_Size() int {
	return xxx_messageInfo_GroupListEntry.Size(m)
}
func (m *GroupListEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupListEntry.DiscardUnknown(m)
}

var xxx_messageInfo_GroupListEntry proto.InternalMessageInfo

func (m *GroupListEntry) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GroupListEntry) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *GroupListEntry) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

type GroupPersonsRequest struct {
	PersonIds            []string `protobuf:"bytes,1,rep,name=person_ids,json=personIds,proto3" json:"person_ids,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupPersonsRequest) Reset()         { *m = GroupPersonsRequest{} }
func (m *GroupPersonsRequest) String() string { return proto.CompactTextString(m) }
func (*GroupPersonsRequest) ProtoMessage()    {}
func (*GroupPersonsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{19}
}

func (m *GroupPersonsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupPersonsRequest.Unmarshal(m, b)
}
func (m *GroupPersonsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupPersonsRequest.Marshal(b, m, deterministic)
}
func (m *GroupPersonsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupPersonsRequest.Merge(m, src)
}
func (m *GroupPersonsRequest) XXX_Size() int {
	return xxx_messageInfo_GroupPersonsRequest.Size(m)
}
func (m *GroupPersonsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupPersonsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupPersonsRequest proto.InternalMessageInfo

func (m *GroupPersonsRequest) GetPersonIds() []string {
	if m != nil {
		return m.PersonIds
	}
	return nil
}

func (m *GroupPersonsRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PersonGroupRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GroupIds             []string `protobuf:"bytes,2,rep,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PersonGroupRequest) Reset()         { *m = PersonGroupRequest{} }
func (m *PersonGroupRequest) String() string { return proto.CompactTextString(m) }
func (*PersonGroupRequest) ProtoMessage()    {}
func (*PersonGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{20}
}

func (m *PersonGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonGroupRequest.Unmarshal(m, b)
}
func (m *PersonGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonGroupRequest.Marshal(b, m, deterministic)
}
func (m *PersonGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonGroupRequest.Merge(m, src)
}
func (m *PersonGroupRequest) XXX_Size() int {
	return xxx_messageInfo_PersonGroupRequest.Size(m)
}
func (m *PersonGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PersonGroupRequest proto.InternalMessageInfo

func (m *PersonGroupRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PersonGroupRequest) GetGroupIds() []string {
	if m != nil {
		return m.GroupIds
	}
	return nil
}

type PersonEventAssignment struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EventId              string   `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PersonEventAssignment) Reset()         { *m = PersonEventAssignment{} }
func (m *PersonEventAssignment) String() string { return proto.CompactTextString(m) }
func (*PersonEventAssignment) ProtoMessage()    {}
func (*PersonEventAssignment) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{21}
}

func (m *PersonEventAssignment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonEventAssignment.Unmarshal(m, b)
}
func (m *PersonEventAssignment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonEventAssignment.Marshal(b, m, deterministic)
}
func (m *PersonEventAssignment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonEventAssignment.Merge(m, src)
}
func (m *PersonEventAssignment) XXX_Size() int {
	return xxx_messageInfo_PersonEventAssignment.Size(m)
}
func (m *PersonEventAssignment) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonEventAssignment.DiscardUnknown(m)
}

var xxx_messageInfo_PersonEventAssignment proto.InternalMessageInfo

func (m *PersonEventAssignment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PersonEventAssignment) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

type PersonRoleRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Role                 Role     `protobuf:"varint,2,opt,name=role,proto3,enum=event.Role" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PersonRoleRequest) Reset()         { *m = PersonRoleRequest{} }
func (m *PersonRoleRequest) String() string { return proto.CompactTextString(m) }
func (*PersonRoleRequest) ProtoMessage()    {}
func (*PersonRoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{22}
}

func (m *PersonRoleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonRoleRequest.Unmarshal(m, b)
}
func (m *PersonRoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonRoleRequest.Marshal(b, m, deterministic)
}
func (m *PersonRoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonRoleRequest.Merge(m, src)
}
func (m *PersonRoleRequest) XXX_Size() int {
	return xxx_messageInfo_PersonRoleRequest.Size(m)
}
func (m *PersonRoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonRoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PersonRoleRequest proto.InternalMessageInfo

func (m *PersonRoleRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PersonRoleRequest) GetRole() Role {
	if m != nil {
		return m.Role
	}
	return Role_student
}

type PersonListRequest struct {
	Pagination           *Pagination           `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Search               *wrappers.StringValue `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PersonListRequest) Reset()         { *m = PersonListRequest{} }
func (m *PersonListRequest) String() string { return proto.CompactTextString(m) }
func (*PersonListRequest) ProtoMessage()    {}
func (*PersonListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{23}
}

func (m *PersonListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonListRequest.Unmarshal(m, b)
}
func (m *PersonListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonListRequest.Marshal(b, m, deterministic)
}
func (m *PersonListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonListRequest.Merge(m, src)
}
func (m *PersonListRequest) XXX_Size() int {
	return xxx_messageInfo_PersonListRequest.Size(m)
}
func (m *PersonListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PersonListRequest proto.InternalMessageInfo

func (m *PersonListRequest) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *PersonListRequest) GetSearch() *wrappers.StringValue {
	if m != nil {
		return m.Search
	}
	return nil
}

func init() {
	proto.RegisterEnum("event.SortOrder", SortOrder_name, SortOrder_value)
	proto.RegisterEnum("event.EventType", EventType_name, EventType_value)
	proto.RegisterEnum("event.Role", Role_name, Role_value)
	proto.RegisterType((*Id)(nil), "event.Id")
	proto.RegisterType((*Pagination)(nil), "event.Pagination")
	proto.RegisterType((*EventCreate)(nil), "event.EventCreate")
	proto.RegisterType((*EventUpdate)(nil), "event.EventUpdate")
	proto.RegisterType((*EventUpdateRequest)(nil), "event.EventUpdateRequest")
	proto.RegisterType((*EventPersonsRequest)(nil), "event.EventPersonsRequest")
	proto.RegisterType((*Event)(nil), "event.Event")
	proto.RegisterType((*EventListRequest)(nil), "event.EventListRequest")
	proto.RegisterType((*EventList)(nil), "event.EventList")
	proto.RegisterType((*Person)(nil), "event.Person")
	proto.RegisterType((*PersonListEntry)(nil), "event.PersonListEntry")
	proto.RegisterType((*PersonList)(nil), "event.PersonList")
	proto.RegisterType((*GroupCreate)(nil), "event.GroupCreate")
	proto.RegisterType((*GroupUpdate)(nil), "event.GroupUpdate")
	proto.RegisterType((*GroupUpdateRequest)(nil), "event.GroupUpdateRequest")
	proto.RegisterType((*Group)(nil), "event.Group")
	proto.RegisterType((*GroupListRequest)(nil), "event.GroupListRequest")
	proto.RegisterType((*GroupList)(nil), "event.GroupList")
	proto.RegisterType((*GroupListEntry)(nil), "event.GroupListEntry")
	proto.RegisterType((*GroupPersonsRequest)(nil), "event.GroupPersonsRequest")
	proto.RegisterType((*PersonGroupRequest)(nil), "event.PersonGroupRequest")
	proto.RegisterType((*PersonEventAssignment)(nil), "event.PersonEventAssignment")
	proto.RegisterType((*PersonRoleRequest)(nil), "event.PersonRoleRequest")
	proto.RegisterType((*PersonListRequest)(nil), "event.PersonListRequest")
}

func init() { proto.RegisterFile("event.proto", fileDescriptor_2d17a9d3f0ddf27e) }

var fileDescriptor_2d17a9d3f0ddf27e = []byte{
	// 1828 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0x5f, 0x6f, 0xdb, 0xd6,
	0x15, 0x0f, 0x65, 0x49, 0x36, 0x0f, 0x6d, 0x47, 0xbe, 0x4d, 0x1c, 0x45, 0x8d, 0x57, 0x95, 0x0b,
	0x16, 0xcf, 0x88, 0x25, 0x57, 0xd9, 0x43, 0xdb, 0x0d, 0x1d, 0x14, 0x5b, 0x75, 0x3d, 0x34, 0x71,
	0x40, 0xa5, 0xdb, 0x80, 0x3d, 0x08, 0xb4, 0x79, 0xa5, 0x70, 0xa5, 0x48, 0x96, 0x97, 0x4e, 0x20,
	0x74, 0x7d, 0x19, 0x86, 0x61, 0xd8, 0xde, 0xbc, 0x0d, 0x03, 0xf6, 0x30, 0x6c, 0x5f, 0x60, 0x40,
	0x1f, 0xf7, 0x39, 0xf6, 0x15, 0xf6, 0xb6, 0x7d, 0x88, 0xe1, 0x9e, 0x73, 0x49, 0x91, 0xb4, 0x94,
	0xca, 0xee, 0xd0, 0x66, 0x40, 0x9f, 0x74, 0xff, 0x9c, 0x7b, 0x7f, 0x3f, 0x9e, 0x7b, 0x7f, 0xe7,
	0x9c, 0x2b, 0x30, 0xf8, 0x73, 0xee, 0xc7, 0xad, 0x30, 0x0a, 0xe2, 0x80, 0x55, 0xb0, 0xd3, 0xb8,
	0x8f, 0xbd, 0xd3, 0xdd, 0x11, 0xf7, 0x77, 0xc5, 0x0b, 0x7b, 0x34, 0xe2, 0x51, 0x3b, 0x08, 0x63,
	0x37, 0xf0, 0x45, 0xdb, 0xf6, 0xfd, 0x20, 0xb6, 0xb1, 0x4d, 0x8b, 0x1a, 0x77, 0x46, 0x41, 0x30,
	0xf2, 0x78, 0xdb, 0x0e, 0xdd, 0x19, 0xb3, 0x6f, 0xa8, 0x59, 0xec, 0x9d, 0x9c, 0x0d, 0xdb, 0xb1,
	0x3b, 0xe6, 0x22, 0xb6, 0xc7, 0xa1, 0x32, 0x78, 0xbd, 0x68, 0xc0, 0xc7, 0x61, 0x3c, 0x51, 0x93,
	0xdf, 0x4d, 0x47, 0xc3, 0x78, 0x12, 0x72, 0xd1, 0x1e, 0xba, 0xdc, 0x73, 0xc6, 0xb6, 0xf8, 0x78,
	0xda, 0x52, 0xa6, 0xf7, 0x8a, 0xa6, 0x2f, 0x22, 0x3b, 0x0c, 0x79, 0x34, 0x6d, 0x90, 0xa1, 0x79,
	0x03, 0x4a, 0x47, 0x0e, 0x5b, 0x87, 0x92, 0xeb, 0xd4, 0xb5, 0xa6, 0xb6, 0xad, 0x5b, 0x25, 0xd7,
	0x31, 0xff, 0xac, 0x01, 0x3c, 0xb1, 0x47, 0xae, 0x8f, 0xec, 0xd9, 0x0d, 0xa8, 0x78, 0xee, 0xd8,
	0x8d, 0xd1, 0xa2, 0x6c, 0x51, 0x87, 0x6d, 0x42, 0x35, 0x18, 0x0e, 0x05, 0x8f, 0xeb, 0x25, 0x1c,
	0x56, 0x3d, 0x76, 0x0b, 0x96, 0x45, 0x10, 0xc5, 0x83, 0x93, 0x49, 0x7d, 0x09, 0x77, 0xac, 0xca,
	0xee, 0xc3, 0x09, 0xfb, 0x0e, 0x54, 0x82, 0xc8, 0xe1, 0x51, 0xbd, 0xdc, 0xd4, 0xb6, 0xd7, 0x3b,
	0xb5, 0x16, 0x79, 0xbb, 0x1f, 0x44, 0xf1, 0xb1, 0x1c, 0xb7, 0x68, 0x9a, 0x6d, 0x01, 0xc4, 0x41,
	0x6c, 0x7b, 0x83, 0x67, 0x6e, 0x2c, 0xea, 0x15, 0xdc, 0x5c, 0xc7, 0x91, 0x0f, 0xdc, 0x58, 0x98,
	0x9f, 0x97, 0xc0, 0xe8, 0xc9, 0x95, 0xfb, 0x11, 0xb7, 0x63, 0xce, 0x18, 0x94, 0x7d, 0x7b, 0xcc,
	0x15, 0x7d, 0x6c, 0xb3, 0xf7, 0xc0, 0x70, 0xb8, 0x38, 0x8d, 0x5c, 0x3c, 0x28, 0x24, 0x68, 0x74,
	0xee, 0xb4, 0xc8, 0xbb, 0xad, 0xc4, 0x39, 0xad, 0x7e, 0x1c, 0xb9, 0xfe, 0xe8, 0xc7, 0xb6, 0x77,
	0xc6, 0xad, 0xec, 0x02, 0xb6, 0x07, 0x15, 0x11, 0xdb, 0x51, 0x8c, 0x5f, 0x60, 0x74, 0x1a, 0x17,
	0x56, 0x3e, 0x4d, 0x0e, 0xce, 0x22, 0x43, 0x76, 0x1f, 0x96, 0xb8, 0xef, 0xe0, 0xa7, 0xbd, 0xdc,
	0x5e, 0x9a, 0xb1, 0x0f, 0x80, 0xb9, 0x62, 0x20, 0xb8, 0x37, 0x1c, 0xd8, 0x42, 0xb8, 0x23, 0xdf,
	0x3e, 0xf1, 0x38, 0x7e, 0xea, 0xac, 0xc5, 0x0f, 0x83, 0xc0, 0x23, 0x92, 0x35, 0x57, 0xf4, 0xb9,
	0x37, 0xec, 0xa6, 0x6b, 0xd8, 0x5d, 0x28, 0xcb, 0x13, 0xae, 0x57, 0x73, 0x3e, 0x45, 0xff, 0x3c,
	0x9d, 0x84, 0xdc, 0xc2, 0x59, 0xf3, 0x1f, 0x89, 0xcf, 0x3e, 0x0a, 0x1d, 0xe9, 0xb3, 0xc2, 0x81,
	0xb3, 0x3d, 0xe5, 0xc3, 0x45, 0x1c, 0x35, 0xd3, 0xc3, 0x4b, 0x57, 0xf6, 0x70, 0xf9, 0x92, 0x1e,
	0xae, 0x7c, 0x19, 0x0f, 0x57, 0x2f, 0xef, 0x61, 0x73, 0x02, 0x2c, 0xe3, 0x3a, 0x8b, 0x7f, 0x72,
	0xc6, 0x45, 0xcc, 0xde, 0x01, 0x40, 0xd1, 0x0d, 0xa4, 0xea, 0xd0, 0x93, 0xb3, 0xf6, 0x7d, 0x5f,
	0x9a, 0x3c, 0xb2, 0xc5, 0xc7, 0x96, 0x3e, 0x4c, 0x9a, 0x6c, 0x1b, 0x28, 0xb4, 0x28, 0x6f, 0xb3,
	0xec, 0x99, 0x29, 0x10, 0x32, 0x30, 0x0f, 0xe0, 0x35, 0x1c, 0x7d, 0xc2, 0x23, 0x11, 0xf8, 0x22,
	0xc1, 0x2e, 0x9e, 0xde, 0x16, 0x40, 0x88, 0x16, 0x03, 0xd7, 0x11, 0xf5, 0x52, 0x73, 0x69, 0x5b,
	0xb7, 0x74, 0x1a, 0x39, 0x72, 0x84, 0xf9, 0x9f, 0x25, 0xa8, 0xe0, 0x36, 0xdf, 0x1c, 0xfb, 0x25,
	0x84, 0xb5, 0x07, 0xcb, 0x63, 0x3e, 0x3e, 0xe1, 0x91, 0xa8, 0x2f, 0x37, 0x97, 0xb6, 0x8d, 0xce,
	0xa6, 0x3a, 0x27, 0x3a, 0x8c, 0x0f, 0x5d, 0x11, 0xf7, 0xfc, 0x38, 0x9a, 0x58, 0x89, 0x99, 0x5c,
	0x71, 0x2a, 0x43, 0x52, 0x10, 0xd5, 0x57, 0x10, 0x70, 0xee, 0x0a, 0x65, 0xc6, 0x76, 0xa1, 0x3a,
	0x8a, 0x82, 0xb3, 0x50, 0xd4, 0x75, 0x84, 0xb8, 0xa9, 0x16, 0x1c, 0xca, 0xc1, 0xa9, 0xbd, 0x32,
	0x4a, 0xb5, 0x0e, 0x2f, 0xd5, 0xfa, 0xdf, 0x4a, 0x50, 0xc3, 0x31, 0xb9, 0x41, 0x72, 0x65, 0xde,
	0x02, 0x08, 0xd3, 0x80, 0xae, 0xae, 0xeb, 0x46, 0x42, 0x2f, 0x9d, 0xb0, 0x32, 0x46, 0x57, 0xb8,
	0x1c, 0xff, 0x37, 0x51, 0xd3, 0x74, 0x40, 0x4f, 0x5d, 0x74, 0x15, 0xdf, 0xdc, 0x85, 0x2a, 0xce,
	0x93, 0xda, 0x8c, 0xce, 0x6a, 0xf6, 0x2c, 0x2c, 0x35, 0x67, 0xfe, 0xb5, 0x04, 0x55, 0x3a, 0xfb,
	0x0b, 0xca, 0x7b, 0x07, 0xf4, 0xe1, 0x99, 0xe7, 0x0d, 0x16, 0xf6, 0xf0, 0x8a, 0x34, 0x7f, 0x2c,
	0xbd, 0xdc, 0x81, 0x8a, 0x17, 0x8c, 0xdc, 0xc5, 0xc4, 0x47, 0xa6, 0xec, 0x07, 0xb0, 0x2e, 0xe2,
	0x33, 0x87, 0xfb, 0xf1, 0x40, 0x5d, 0xb8, 0xf2, 0xcb, 0x2e, 0xdc, 0x9a, 0x32, 0x3e, 0xa4, 0x7b,
	0xf7, 0x36, 0xac, 0xda, 0xce, 0xd8, 0xf5, 0x93, 0xb5, 0x95, 0x97, 0xad, 0x35, 0xd0, 0x54, 0xad,
	0x7c, 0x03, 0xca, 0x51, 0xe0, 0x25, 0xd9, 0xc9, 0x50, 0x2b, 0xac, 0xc0, 0xe3, 0x16, 0x4e, 0x98,
	0x9f, 0x6b, 0x70, 0xbd, 0x20, 0x8f, 0xaf, 0xdb, 0x57, 0x09, 0xe7, 0xf2, 0x3c, 0xce, 0x9f, 0x00,
	0x4c, 0x29, 0x5f, 0x4d, 0x59, 0xcb, 0x14, 0x9d, 0x93, 0xeb, 0x33, 0x37, 0x50, 0x28, 0x33, 0xf3,
	0x2f, 0x1a, 0x18, 0xe8, 0x52, 0x55, 0xf3, 0xec, 0x65, 0x6a, 0x9e, 0x2b, 0x05, 0xee, 0x4b, 0x57,
	0x44, 0x5b, 0x00, 0x14, 0xe7, 0x30, 0xc7, 0x2c, 0x51, 0x8e, 0xa1, 0x11, 0x99, 0x63, 0xfe, 0x9e,
	0x10, 0x7c, 0x65, 0x0a, 0x8c, 0x3c, 0xe1, 0x72, 0x91, 0xf0, 0x04, 0x58, 0x86, 0xef, 0xff, 0x26,
	0xab, 0xa3, 0x3c, 0x0a, 0x59, 0x3d, 0x0b, 0x42, 0x06, 0xe6, 0xbf, 0x35, 0xa8, 0xe0, 0xf0, 0x2b,
	0x91, 0x8f, 0xd3, 0x2c, 0x57, 0x5e, 0x2c, 0xcb, 0xb5, 0xa0, 0x8a, 0x0a, 0x4f, 0xc2, 0xc0, 0xbc,
	0x05, 0xca, 0xca, 0x7c, 0x01, 0xb5, 0x34, 0x42, 0x7c, 0x95, 0xd9, 0xc8, 0x1c, 0x83, 0x9e, 0x02,
	0x5f, 0x05, 0x71, 0x9a, 0x9c, 0x4b, 0x0b, 0x24, 0x67, 0xf3, 0x5c, 0x83, 0xf5, 0xfc, 0xd4, 0xd7,
	0x7f, 0xbc, 0xb2, 0x80, 0x44, 0x4e, 0x85, 0x02, 0x32, 0x5f, 0x30, 0x6a, 0x85, 0x82, 0x51, 0xf1,
	0x2e, 0xa5, 0xcf, 0xc1, 0x2e, 0x30, 0xda, 0x00, 0xf7, 0x9a, 0x57, 0x85, 0xbe, 0x0e, 0x3a, 0xba,
	0x22, 0x53, 0x84, 0xae, 0xe0, 0x80, 0x94, 0xdb, 0x43, 0xb8, 0x49, 0x5b, 0x60, 0x86, 0xa4, 0x4c,
	0x3c, 0x9e, 0x55, 0x92, 0xde, 0x86, 0x15, 0x74, 0xf3, 0x20, 0x65, 0xb0, 0x8c, 0xfd, 0x23, 0xc7,
	0x3c, 0x80, 0x0d, 0xda, 0x03, 0x63, 0xf1, 0x1c, 0x16, 0x49, 0xf4, 0x2e, 0xcd, 0x8b, 0xde, 0xbf,
	0x48, 0x76, 0xf9, 0x92, 0x17, 0xf2, 0x7b, 0x50, 0x15, 0xdc, 0x8e, 0x4e, 0x9f, 0x2d, 0x74, 0x9c,
	0xca, 0x76, 0xe7, 0x3e, 0xe8, 0xe9, 0x7b, 0x97, 0xad, 0xc2, 0xca, 0xe3, 0xe3, 0xc1, 0xb1, 0x75,
	0xd0, 0xb3, 0x6a, 0xd7, 0xd8, 0x32, 0x2c, 0x75, 0xfb, 0xfb, 0x35, 0x8d, 0xad, 0x40, 0xf9, 0xa0,
	0xd7, 0xdf, 0xaf, 0x95, 0x76, 0x5a, 0xaa, 0x4c, 0x91, 0xd5, 0x1d, 0x03, 0xa8, 0x1e, 0x3f, 0xe9,
	0x3d, 0xee, 0x1d, 0xd4, 0xae, 0x31, 0x1d, 0x2a, 0x87, 0xd6, 0xf1, 0x47, 0x4f, 0x6a, 0x9a, 0x1c,
	0xde, 0xff, 0xf0, 0xb8, 0xdf, 0x3b, 0xa8, 0x95, 0x76, 0xba, 0x50, 0x96, 0x5f, 0xca, 0x0c, 0x58,
	0x56, 0x19, 0xbc, 0x76, 0x8d, 0xd5, 0x60, 0x95, 0xce, 0x85, 0x14, 0x5c, 0xd3, 0xd8, 0x75, 0x30,
	0x68, 0x04, 0x25, 0x5a, 0x2b, 0xc9, 0xed, 0xa8, 0xb9, 0xd4, 0xf9, 0xd5, 0x0d, 0x58, 0x45, 0xcc,
	0x3e, 0x8f, 0x9e, 0xbb, 0xa7, 0x9c, 0x3d, 0x07, 0x83, 0x92, 0x0e, 0x3d, 0x21, 0x72, 0xaf, 0x15,
	0x9a, 0x68, 0x6c, 0x5e, 0xf8, 0xf4, 0xde, 0x38, 0x8c, 0x27, 0xe6, 0xf7, 0xcf, 0xbb, 0xf7, 0x92,
	0xa7, 0x47, 0x0d, 0x6b, 0x5e, 0xde, 0xf4, 0xf9, 0x8b, 0x26, 0xfd, 0xb1, 0xb2, 0x4a, 0xab, 0xa9,
	0xf7, 0xcb, 0x7f, 0xfe, 0xeb, 0xf7, 0x25, 0xc3, 0xac, 0xb6, 0xb1, 0xf7, 0xae, 0xb6, 0xc3, 0x7e,
	0xa3, 0x81, 0x41, 0x71, 0x93, 0x36, 0xb8, 0x3d, 0xe3, 0x99, 0x44, 0xa7, 0x37, 0x17, 0xff, 0xfd,
	0xf3, 0xee, 0xb7, 0x13, 0xfc, 0xd5, 0x33, 0x5c, 0xd2, 0xec, 0x11, 0x76, 0xb6, 0x87, 0xd8, 0x8d,
	0xce, 0x06, 0x61, 0xb7, 0x3f, 0x25, 0x1c, 0xd7, 0xf9, 0xec, 0x5d, 0x7a, 0x86, 0xb1, 0x3f, 0x6a,
	0x70, 0xbd, 0xcf, 0x63, 0x34, 0x7e, 0xa4, 0xc2, 0x60, 0x23, 0x4b, 0x27, 0x2f, 0xaf, 0xb9, 0x7c,
	0x1e, 0x9f, 0x77, 0x77, 0x13, 0x3e, 0x1b, 0x82, 0xc7, 0xf4, 0xe9, 0x4d, 0x15, 0x59, 0x1b, 0x17,
	0x87, 0x90, 0x59, 0xbd, 0xf3, 0x5a, 0xc2, 0xcc, 0x75, 0x3e, 0x6b, 0xab, 0x29, 0xe9, 0xa2, 0x9f,
	0xc2, 0xca, 0xa1, 0xa2, 0xc5, 0x74, 0xc5, 0xe7, 0xc8, 0x69, 0xe4, 0x8a, 0x51, 0xf3, 0xc1, 0x79,
	0x77, 0x2b, 0x01, 0xd5, 0x47, 0x3c, 0x56, 0x1e, 0x98, 0x36, 0x11, 0x64, 0x8d, 0x19, 0x19, 0x10,
	0xe6, 0x01, 0x60, 0x18, 0xc3, 0x3a, 0x96, 0xdd, 0xca, 0x6e, 0x98, 0x91, 0x4d, 0xa3, 0x56, 0x9c,
	0x90, 0x68, 0x6f, 0x26, 0x68, 0x86, 0xe7, 0x0a, 0x85, 0x21, 0x1a, 0xd9, 0x0e, 0x22, 0xea, 0x6c,
	0x99, 0x10, 0x05, 0x0b, 0xe1, 0xfa, 0x61, 0xc1, 0xbd, 0x99, 0xcf, 0xd9, 0xb8, 0x90, 0x60, 0xcc,
	0x1f, 0x2e, 0x8c, 0x72, 0x93, 0xcd, 0x72, 0x1e, 0xf3, 0x61, 0x3d, 0x41, 0xec, 0x62, 0x9a, 0xfa,
	0x02, 0xc0, 0xf7, 0x16, 0x06, 0xbc, 0xc1, 0x58, 0x16, 0x90, 0x92, 0xe0, 0x54, 0x44, 0x94, 0xf7,
	0x73, 0xc5, 0xc1, 0x42, 0x22, 0xa2, 0x75, 0x59, 0x11, 0xe1, 0x48, 0x2a, 0x22, 0xec, 0xa5, 0x22,
	0x42, 0x75, 0xe7, 0x45, 0x44, 0x1b, 0xdc, 0x9e, 0x51, 0x95, 0x2c, 0x24, 0x22, 0x5a, 0x9e, 0xc8,
	0x46, 0x61, 0x67, 0x7b, 0xa9, 0x88, 0x10, 0xbb, 0xfd, 0x29, 0xfe, 0x90, 0x88, 0xb0, 0xc9, 0x7e,
	0xab, 0xc1, 0x7a, 0x9f, 0xd3, 0x93, 0x42, 0xf9, 0xbc, 0x91, 0x65, 0xb3, 0xa0, 0x86, 0x0e, 0x2e,
	0x41, 0x47, 0x2a, 0x47, 0xd1, 0x29, 0x28, 0xe7, 0x77, 0xa4, 0x68, 0x34, 0x2d, 0x2a, 0xfa, 0xab,
	0x67, 0x43, 0x3a, 0xa6, 0x5d, 0x66, 0xe8, 0x18, 0x27, 0x94, 0x8e, 0x95, 0x91, 0x14, 0x2f, 0xe1,
	0x4c, 0x9b, 0xa9, 0x8e, 0xa7, 0x20, 0x89, 0x8e, 0xd5, 0x6b, 0xec, 0x56, 0xb1, 0x82, 0x29, 0xea,
	0x38, 0x9d, 0x50, 0x3a, 0x26, 0x34, 0xba, 0xe3, 0xb4, 0x47, 0x23, 0xdb, 0x49, 0x75, 0xac, 0xfe,
	0x9f, 0x20, 0x1d, 0xe7, 0x9c, 0xba, 0x88, 0x8e, 0x17, 0x41, 0x91, 0x3a, 0xbe, 0xe8, 0x3c, 0xa5,
	0xe3, 0xec, 0x9d, 0x5a, 0x44, 0xc7, 0x8b, 0x00, 0x4a, 0x1d, 0x67, 0x00, 0x95, 0x8e, 0xff, 0xa4,
	0x81, 0xfe, 0xa3, 0xc0, 0xa5, 0x2a, 0x86, 0xdd, 0xc9, 0x01, 0x14, 0x2a, 0x9b, 0xb9, 0x77, 0xe6,
	0xe9, 0x79, 0xf7, 0x6e, 0xfa, 0xbf, 0xc0, 0x17, 0xa5, 0xa5, 0x7b, 0x1d, 0xb3, 0x4d, 0x85, 0x19,
	0xf1, 0xf8, 0x79, 0xe0, 0xfa, 0xb9, 0x3c, 0x35, 0x90, 0x12, 0xd3, 0x76, 0xd8, 0x1f, 0x48, 0x5e,
	0xdd, 0xcc, 0xe3, 0xfb, 0x76, 0x8e, 0x5e, 0xb6, 0x76, 0x9b, 0xcb, 0xed, 0x78, 0x16, 0xb7, 0x79,
	0x17, 0xda, 0xec, 0x6c, 0xe5, 0xb8, 0xa1, 0x8f, 0xda, 0x82, 0xc7, 0xbb, 0x74, 0x1f, 0x24, 0xad,
	0x5f, 0x6b, 0xb0, 0xd6, 0xe7, 0xf1, 0xb4, 0x6e, 0x63, 0xf5, 0x1c, 0xab, 0x4c, 0x29, 0x37, 0x97,
	0xd4, 0xfe, 0x65, 0x48, 0x6d, 0x76, 0x36, 0x72, 0xa4, 0x64, 0xcd, 0x27, 0x89, 0x0c, 0x40, 0x3f,
	0x4c, 0x78, 0x64, 0x2f, 0xc9, 0x5a, 0x8e, 0x8e, 0xf9, 0xb6, 0xbc, 0x20, 0x09, 0x96, 0x21, 0xb5,
	0x45, 0x9b, 0x35, 0x1b, 0x30, 0xed, 0x20, 0xd0, 0x3a, 0x5b, 0xcd, 0x02, 0xb1, 0x00, 0x0c, 0x79,
	0xc5, 0x54, 0xe0, 0x28, 0x7c, 0x66, 0x56, 0x6c, 0x33, 0xae, 0xe5, 0x83, 0x85, 0x51, 0xa5, 0xda,
	0xa8, 0xcb, 0x7e, 0x06, 0xd5, 0x9f, 0x3c, 0x0b, 0xba, 0xe3, 0x23, 0x36, 0xc7, 0x71, 0xc5, 0x6f,
	0xdb, 0x91, 0x11, 0x24, 0x41, 0xc1, 0xb8, 0x21, 0xb8, 0x37, 0x6c, 0x36, 0x56, 0x92, 0x26, 0x22,
	0x94, 0x59, 0xa9, 0xed, 0x3e, 0x7c, 0xf3, 0xbc, 0xfb, 0x2d, 0xb6, 0x09, 0x6b, 0x78, 0x13, 0x9b,
	0x8f, 0x6c, 0xdf, 0x1e, 0xf1, 0xa8, 0x53, 0x79, 0xab, 0xb5, 0xd7, 0xda, 0x33, 0xcb, 0x6d, 0x3b,
	0x74, 0x4f, 0xaa, 0x88, 0xf6, 0xe0, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x68, 0x46, 0x9e, 0xf4,
	0x35, 0x1b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventServiceClient is the client API for EventService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventServiceClient interface {
	CreateEvent(ctx context.Context, in *EventCreate, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateEvent(ctx context.Context, in *EventUpdateRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	SetEventMembers(ctx context.Context, in *EventPersonsRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetEvent(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Event, error)
	ListEvents(ctx context.Context, in *EventListRequest, opts ...grpc.CallOption) (*EventList, error)
	GetEventMembers(ctx context.Context, in *Id, opts ...grpc.CallOption) (*PersonList, error)
	GetEventAdmins(ctx context.Context, in *Id, opts ...grpc.CallOption) (*PersonList, error)
	CreateGroup(ctx context.Context, in *GroupCreate, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateGroup(ctx context.Context, in *GroupUpdateRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	SetGroupAdmins(ctx context.Context, in *GroupPersonsRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	SetGroupMembers(ctx context.Context, in *GroupPersonsRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetGroup(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Group, error)
	ListGroups(ctx context.Context, in *GroupListRequest, opts ...grpc.CallOption) (*GroupList, error)
	GetGroupMembers(ctx context.Context, in *Id, opts ...grpc.CallOption) (*PersonList, error)
	GetGroupAdmins(ctx context.Context, in *Id, opts ...grpc.CallOption) (*PersonList, error)
	JoinEvent(ctx context.Context, in *PersonEventAssignment, opts ...grpc.CallOption) (*empty.Empty, error)
	SetAdminGroups(ctx context.Context, in *PersonGroupRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	SetPersonRole(ctx context.Context, in *PersonRoleRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetPerson(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Person, error)
	ListPersons(ctx context.Context, in *PersonListRequest, opts ...grpc.CallOption) (*PersonList, error)
	WhoAmI(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Person, error)
}

type eventServiceClient struct {
	cc *grpc.ClientConn
}

func NewEventServiceClient(cc *grpc.ClientConn) EventServiceClient {
	return &eventServiceClient{cc}
}

func (c *eventServiceClient) CreateEvent(ctx context.Context, in *EventCreate, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/event.EventService/CreateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) UpdateEvent(ctx context.Context, in *EventUpdateRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/event.EventService/UpdateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) SetEventMembers(ctx context.Context, in *EventPersonsRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/event.EventService/SetEventMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) GetEvent(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Event, error) {
	out := new(Event)
	err := c.cc.Invoke(ctx, "/event.EventService/GetEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) ListEvents(ctx context.Context, in *EventListRequest, opts ...grpc.CallOption) (*EventList, error) {
	out := new(EventList)
	err := c.cc.Invoke(ctx, "/event.EventService/ListEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) GetEventMembers(ctx context.Context, in *Id, opts ...grpc.CallOption) (*PersonList, error) {
	out := new(PersonList)
	err := c.cc.Invoke(ctx, "/event.EventService/GetEventMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) GetEventAdmins(ctx context.Context, in *Id, opts ...grpc.CallOption) (*PersonList, error) {
	out := new(PersonList)
	err := c.cc.Invoke(ctx, "/event.EventService/GetEventAdmins", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) CreateGroup(ctx context.Context, in *GroupCreate, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/event.EventService/CreateGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) UpdateGroup(ctx context.Context, in *GroupUpdateRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/event.EventService/UpdateGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) SetGroupAdmins(ctx context.Context, in *GroupPersonsRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/event.EventService/SetGroupAdmins", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) SetGroupMembers(ctx context.Context, in *GroupPersonsRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/event.EventService/SetGroupMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) GetGroup(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Group, error) {
	out := new(Group)
	err := c.cc.Invoke(ctx, "/event.EventService/GetGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) ListGroups(ctx context.Context, in *GroupListRequest, opts ...grpc.CallOption) (*GroupList, error) {
	out := new(GroupList)
	err := c.cc.Invoke(ctx, "/event.EventService/ListGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) GetGroupMembers(ctx context.Context, in *Id, opts ...grpc.CallOption) (*PersonList, error) {
	out := new(PersonList)
	err := c.cc.Invoke(ctx, "/event.EventService/GetGroupMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) GetGroupAdmins(ctx context.Context, in *Id, opts ...grpc.CallOption) (*PersonList, error) {
	out := new(PersonList)
	err := c.cc.Invoke(ctx, "/event.EventService/GetGroupAdmins", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) JoinEvent(ctx context.Context, in *PersonEventAssignment, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/event.EventService/JoinEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) SetAdminGroups(ctx context.Context, in *PersonGroupRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/event.EventService/SetAdminGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) SetPersonRole(ctx context.Context, in *PersonRoleRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/event.EventService/SetPersonRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) GetPerson(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Person, error) {
	out := new(Person)
	err := c.cc.Invoke(ctx, "/event.EventService/GetPerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) ListPersons(ctx context.Context, in *PersonListRequest, opts ...grpc.CallOption) (*PersonList, error) {
	out := new(PersonList)
	err := c.cc.Invoke(ctx, "/event.EventService/ListPersons", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) WhoAmI(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Person, error) {
	out := new(Person)
	err := c.cc.Invoke(ctx, "/event.EventService/WhoAmI", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventServiceServer is the server API for EventService service.
type EventServiceServer interface {
	CreateEvent(context.Context, *EventCreate) (*empty.Empty, error)
	UpdateEvent(context.Context, *EventUpdateRequest) (*empty.Empty, error)
	SetEventMembers(context.Context, *EventPersonsRequest) (*empty.Empty, error)
	GetEvent(context.Context, *Id) (*Event, error)
	ListEvents(context.Context, *EventListRequest) (*EventList, error)
	GetEventMembers(context.Context, *Id) (*PersonList, error)
	GetEventAdmins(context.Context, *Id) (*PersonList, error)
	CreateGroup(context.Context, *GroupCreate) (*empty.Empty, error)
	UpdateGroup(context.Context, *GroupUpdateRequest) (*empty.Empty, error)
	SetGroupAdmins(context.Context, *GroupPersonsRequest) (*empty.Empty, error)
	SetGroupMembers(context.Context, *GroupPersonsRequest) (*empty.Empty, error)
	GetGroup(context.Context, *Id) (*Group, error)
	ListGroups(context.Context, *GroupListRequest) (*GroupList, error)
	GetGroupMembers(context.Context, *Id) (*PersonList, error)
	GetGroupAdmins(context.Context, *Id) (*PersonList, error)
	JoinEvent(context.Context, *PersonEventAssignment) (*empty.Empty, error)
	SetAdminGroups(context.Context, *PersonGroupRequest) (*empty.Empty, error)
	SetPersonRole(context.Context, *PersonRoleRequest) (*empty.Empty, error)
	GetPerson(context.Context, *Id) (*Person, error)
	ListPersons(context.Context, *PersonListRequest) (*PersonList, error)
	WhoAmI(context.Context, *empty.Empty) (*Person, error)
}

// UnimplementedEventServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEventServiceServer struct {
}

func (*UnimplementedEventServiceServer) CreateEvent(ctx context.Context, req *EventCreate) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEvent not implemented")
}
func (*UnimplementedEventServiceServer) UpdateEvent(ctx context.Context, req *EventUpdateRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEvent not implemented")
}
func (*UnimplementedEventServiceServer) SetEventMembers(ctx context.Context, req *EventPersonsRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetEventMembers not implemented")
}
func (*UnimplementedEventServiceServer) GetEvent(ctx context.Context, req *Id) (*Event, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEvent not implemented")
}
func (*UnimplementedEventServiceServer) ListEvents(ctx context.Context, req *EventListRequest) (*EventList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListEvents not implemented")
}
func (*UnimplementedEventServiceServer) GetEventMembers(ctx context.Context, req *Id) (*PersonList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEventMembers not implemented")
}
func (*UnimplementedEventServiceServer) GetEventAdmins(ctx context.Context, req *Id) (*PersonList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEventAdmins not implemented")
}
func (*UnimplementedEventServiceServer) CreateGroup(ctx context.Context, req *GroupCreate) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGroup not implemented")
}
func (*UnimplementedEventServiceServer) UpdateGroup(ctx context.Context, req *GroupUpdateRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGroup not implemented")
}
func (*UnimplementedEventServiceServer) SetGroupAdmins(ctx context.Context, req *GroupPersonsRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGroupAdmins not implemented")
}
func (*UnimplementedEventServiceServer) SetGroupMembers(ctx context.Context, req *GroupPersonsRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGroupMembers not implemented")
}
func (*UnimplementedEventServiceServer) GetGroup(ctx context.Context, req *Id) (*Group, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroup not implemented")
}
func (*UnimplementedEventServiceServer) ListGroups(ctx context.Context, req *GroupListRequest) (*GroupList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGroups not implemented")
}
func (*UnimplementedEventServiceServer) GetGroupMembers(ctx context.Context, req *Id) (*PersonList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroupMembers not implemented")
}
func (*UnimplementedEventServiceServer) GetGroupAdmins(ctx context.Context, req *Id) (*PersonList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroupAdmins not implemented")
}
func (*UnimplementedEventServiceServer) JoinEvent(ctx context.Context, req *PersonEventAssignment) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinEvent not implemented")
}
func (*UnimplementedEventServiceServer) SetAdminGroups(ctx context.Context, req *PersonGroupRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAdminGroups not implemented")
}
func (*UnimplementedEventServiceServer) SetPersonRole(ctx context.Context, req *PersonRoleRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPersonRole not implemented")
}
func (*UnimplementedEventServiceServer) GetPerson(ctx context.Context, req *Id) (*Person, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPerson not implemented")
}
func (*UnimplementedEventServiceServer) ListPersons(ctx context.Context, req *PersonListRequest) (*PersonList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPersons not implemented")
}
func (*UnimplementedEventServiceServer) WhoAmI(ctx context.Context, req *empty.Empty) (*Person, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhoAmI not implemented")
}

func RegisterEventServiceServer(s *grpc.Server, srv EventServiceServer) {
	s.RegisterService(&_EventService_serviceDesc, srv)
}

func _EventService_CreateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).CreateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/CreateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).CreateEvent(ctx, req.(*EventCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_UpdateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).UpdateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/UpdateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).UpdateEvent(ctx, req.(*EventUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_SetEventMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventPersonsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).SetEventMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/SetEventMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).SetEventMembers(ctx, req.(*EventPersonsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_GetEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).GetEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/GetEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).GetEvent(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_ListEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).ListEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/ListEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).ListEvents(ctx, req.(*EventListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_GetEventMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).GetEventMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/GetEventMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).GetEventMembers(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_GetEventAdmins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).GetEventAdmins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/GetEventAdmins",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).GetEventAdmins(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_CreateGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).CreateGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/CreateGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).CreateGroup(ctx, req.(*GroupCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_UpdateGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).UpdateGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/UpdateGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).UpdateGroup(ctx, req.(*GroupUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_SetGroupAdmins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupPersonsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).SetGroupAdmins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/SetGroupAdmins",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).SetGroupAdmins(ctx, req.(*GroupPersonsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_SetGroupMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupPersonsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).SetGroupMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/SetGroupMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).SetGroupMembers(ctx, req.(*GroupPersonsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_GetGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).GetGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/GetGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).GetGroup(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_ListGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).ListGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/ListGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).ListGroups(ctx, req.(*GroupListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_GetGroupMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).GetGroupMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/GetGroupMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).GetGroupMembers(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_GetGroupAdmins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).GetGroupAdmins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/GetGroupAdmins",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).GetGroupAdmins(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_JoinEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PersonEventAssignment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).JoinEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/JoinEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).JoinEvent(ctx, req.(*PersonEventAssignment))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_SetAdminGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PersonGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).SetAdminGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/SetAdminGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).SetAdminGroups(ctx, req.(*PersonGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_SetPersonRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PersonRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).SetPersonRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/SetPersonRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).SetPersonRole(ctx, req.(*PersonRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_GetPerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).GetPerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/GetPerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).GetPerson(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_ListPersons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PersonListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).ListPersons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/ListPersons",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).ListPersons(ctx, req.(*PersonListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_WhoAmI_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).WhoAmI(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.EventService/WhoAmI",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).WhoAmI(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "event.EventService",
	HandlerType: (*EventServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEvent",
			Handler:    _EventService_CreateEvent_Handler,
		},
		{
			MethodName: "UpdateEvent",
			Handler:    _EventService_UpdateEvent_Handler,
		},
		{
			MethodName: "SetEventMembers",
			Handler:    _EventService_SetEventMembers_Handler,
		},
		{
			MethodName: "GetEvent",
			Handler:    _EventService_GetEvent_Handler,
		},
		{
			MethodName: "ListEvents",
			Handler:    _EventService_ListEvents_Handler,
		},
		{
			MethodName: "GetEventMembers",
			Handler:    _EventService_GetEventMembers_Handler,
		},
		{
			MethodName: "GetEventAdmins",
			Handler:    _EventService_GetEventAdmins_Handler,
		},
		{
			MethodName: "CreateGroup",
			Handler:    _EventService_CreateGroup_Handler,
		},
		{
			MethodName: "UpdateGroup",
			Handler:    _EventService_UpdateGroup_Handler,
		},
		{
			MethodName: "SetGroupAdmins",
			Handler:    _EventService_SetGroupAdmins_Handler,
		},
		{
			MethodName: "SetGroupMembers",
			Handler:    _EventService_SetGroupMembers_Handler,
		},
		{
			MethodName: "GetGroup",
			Handler:    _EventService_GetGroup_Handler,
		},
		{
			MethodName: "ListGroups",
			Handler:    _EventService_ListGroups_Handler,
		},
		{
			MethodName: "GetGroupMembers",
			Handler:    _EventService_GetGroupMembers_Handler,
		},
		{
			MethodName: "GetGroupAdmins",
			Handler:    _EventService_GetGroupAdmins_Handler,
		},
		{
			MethodName: "JoinEvent",
			Handler:    _EventService_JoinEvent_Handler,
		},
		{
			MethodName: "SetAdminGroups",
			Handler:    _EventService_SetAdminGroups_Handler,
		},
		{
			MethodName: "SetPersonRole",
			Handler:    _EventService_SetPersonRole_Handler,
		},
		{
			MethodName: "GetPerson",
			Handler:    _EventService_GetPerson_Handler,
		},
		{
			MethodName: "ListPersons",
			Handler:    _EventService_ListPersons_Handler,
		},
		{
			MethodName: "WhoAmI",
			Handler:    _EventService_WhoAmI_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "event.proto",
}
